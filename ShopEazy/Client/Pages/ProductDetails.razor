@page "/product/{id:int}"
@using ShopEazy.Shared.Models
@inject IProductClientServices ProductClientServices

@if (product == null)
{
    <span>@message</span>
}
else
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@product.Title</h2>
            
            <p>@product.Description</p>
            @if (product.Variants != null && product.Variants.Count > 1)
            {
                <div class="form-group table-responsive" >

                    <select class="form-select" @bind="currentTypeId">
                        @foreach(var variant in product.Variants )
                        {
                            <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                        }

                    </select>
                </div>

            }

            @if(GetSelectedVaraint() != null)
            {
                if(GetSelectedVaraint().OriginalPrice > GetSelectedVaraint().Price)
                {
                    <h6 class="text-muted original-price"><span class="currency">&#8377;</span>@GetSelectedVaraint().OriginalPrice</h6>
                }
                 <h6 class="price"><span class="currency">&#8377;</span>@GetSelectedVaraint().Price</h6>
            }
           
             </div>
    </div>
}
@code {
    private Product product = null;
    private String message = null;
    private int currentTypeId = 1;
    [Parameter]
    public int Id { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        message = "Product Loding..";
        var result= await ProductClientServices.GetProductById(Id);
        if(!result.Success)
        {
            message = result.Message;
        }
        else
        {
            product = result.Data;
            if(product.Variants.Count >0)
            {
                currentTypeId = product.Variants[0].ProductTypeId;
            }

        }


    }

    private ProductVariant GetSelectedVaraint()
    {
        var variant = product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variant;
    }

}
